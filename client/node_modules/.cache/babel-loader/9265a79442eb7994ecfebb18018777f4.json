{"ast":null,"code":"import _defineProperty from \"C:\\\\univer\\\\Projects\\\\Projects_html_css_js\\\\nodejs_projects\\\\CA2_project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\univer\\\\Projects\\\\Projects_html_css_js\\\\nodejs_projects\\\\CA2_project\\\\client\\\\src\\\\components\\\\FilterTshirts.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nexport default class FilterTshirts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = (type, value) => {\n      this.setState(prevState => _objectSpread({}, prevState, {\n        [type]: _objectSpread({}, prevState[type], {\n          [value]: !prevState[type][value]\n        })\n      }), () => {\n        // Перетворіть об'єкти фільтрів на масиви\n        const filters = {\n          sizes: Object.keys(this.state.sizes).filter(key => this.state.sizes[key]),\n          colors: Object.keys(this.state.colors).filter(key => this.state.colors[key])\n        };\n        this.props.onFilterChange(filters);\n      });\n    };\n\n    this.state = {\n      sizes: {\n        S: false,\n        M: false,\n        L: false,\n        XL: false\n      },\n      colors: {\n        red: false,\n        blue: false,\n        green: false\n      },\n      styles: {\n        casual: false,\n        formal: false,\n        green: false\n      }\n    };\n  }\n\n  renderSizeCheckboxes() {\n    return Object.keys(this.state.sizes).map(size => React.createElement(\"div\", {\n      key: size,\n      className: \"form-check form-check-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      id: \"size-\".concat(size),\n      checked: this.state.sizes[size],\n      onChange: () => this.handleCheckboxChange('sizes', size),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"size-\".concat(size),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, size)));\n  }\n\n  renderColorCheckboxes() {\n    return Object.keys(this.state.colors).map(color => React.createElement(\"div\", {\n      key: color,\n      className: \"form-check form-check-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      id: \"color-\".concat(color),\n      checked: this.state.colors[color],\n      onChange: () => this.handleCheckboxChange('colors', color),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"color-\".concat(color),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, color)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"filterCheckboxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Filter by Size\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.renderSizeCheckboxes()), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Filter by Color\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.renderColorCheckboxes()));\n  }\n\n}","map":{"version":3,"sources":["C:\\univer\\Projects\\Projects_html_css_js\\nodejs_projects\\CA2_project\\client\\src\\components\\FilterTshirts.js"],"names":["React","Component","FilterTshirts","constructor","props","handleCheckboxChange","type","value","setState","prevState","filters","sizes","Object","keys","state","filter","key","colors","onFilterChange","S","M","L","XL","red","blue","green","styles","casual","formal","renderSizeCheckboxes","map","size","renderColorCheckboxes","color","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nexport default class FilterTshirts extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            sizes: {\r\n                S: false,\r\n                M: false,\r\n                L: false,\r\n                XL: false\r\n            },\r\n            colors: {\r\n                red: false,\r\n                blue: false,\r\n                green: false\r\n            },\r\n            styles: {\r\n                casual: false,\r\n                formal: false,\r\n                green: false\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCheckboxChange = (type, value) => {\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            [type]: {\r\n                ...prevState[type],\r\n                [value]: !prevState[type][value]\r\n            }\r\n        }), () => {\r\n            // Перетворіть об'єкти фільтрів на масиви\r\n            const filters = {\r\n                sizes: Object.keys(this.state.sizes).filter(key => this.state.sizes[key]),\r\n                colors: Object.keys(this.state.colors).filter(key => this.state.colors[key])\r\n            };\r\n            this.props.onFilterChange(filters);\r\n        });\r\n    }\r\n\r\n\r\n    renderSizeCheckboxes() {\r\n        return Object.keys(this.state.sizes).map(size => (\r\n            <div key={size} className=\"form-check form-check-inline\">\r\n                <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id={`size-${size}`}\r\n                    checked={this.state.sizes[size]}\r\n                    onChange={() => this.handleCheckboxChange('sizes', size)}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={`size-${size}`}>{size}</label>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    renderColorCheckboxes() {\r\n        return Object.keys(this.state.colors).map(color => (\r\n            <div key={color} className=\"form-check form-check-inline\">\r\n                <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id={`color-${color}`}\r\n                    checked={this.state.colors[color]}\r\n                    onChange={() => this.handleCheckboxChange('colors', color)}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={`color-${color}`}>{color}</label>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filterCheckboxes\">\r\n                <h4>Filter by Size</h4>\r\n                <div>{this.renderSizeCheckboxes()}</div>\r\n                <h4>Filter by Color</h4>\r\n                <div>{this.renderColorCheckboxes()}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}